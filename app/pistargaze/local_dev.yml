version: '3'

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}
  astrometry_index: {}

services:
  django: &django
    privileged: true #this is bad, TODO: find a real way of allowing commands to run
    #network_mode: "host"
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: pistargaze_local_django
    depends_on:
      - postgres
    volumes:
      - .:/app
      - ./special/:/shutdown_signal
      - ../../:/mnt/
      - ./var/run/videostream/:/var/run/videostream/

    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start

    environment:
    - NON_PI_DEV=TRUE

  nova:
    build:
      context: .
      dockerfile: ./compose/local/nova/Dockerfile
    ports:
      - 8001:8000
    volumes:
      # Use one of the two mounting options to add index files:
      # use this for a docker volume that contains index fiels (preferred):
      - astrometry_index:/usr/local/astrometry/data
      # alternatively, use this to mount the index files from a specific directory:
      # - /Users/Dave/Desktop/astrometry:/usr/local/astrometry/data
    restart: unless-stopped





  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: pistargaze_production_postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres

  redis:
    image: redis:5.0

  celeryworker:
    <<: *django
    image: pistargaze_local_celeryworker
    depends_on:
      - redis
      - postgres
      
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: pistargaze_local_celerybeat
    depends_on:
      - redis
      - postgres
      
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: pistargaze_local_flower
    ports:
      - "5555:5555"
    command: /start-flower


  videostream:
    <<: *django
    image:  pistargaze_local_videostream
    build:
      context: .
      dockerfile: ./compose/local/videostream/x86_64_linux/Dockerfile
    volumes:
      - ./:/dev/bus/usb
      - ./var/run/videostream/:/var/run/videostream/
    ports:
      - "8090:8090"
